--PL/SQL
--내용을 화면에 추가하기
DECLARE
    PONE_NUM VARCHAR2(13);
    NAME VARCHAR2(10);
    NUM NUMBER:=24*60;
    EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE;
BEGIN
    --NUM := 100;
    PONE_NUM := '010-1234-1234';
    NAME := 'PCH';
    EMPLOYEE_ID := 100;
    DBMS_OUTPUT.PUT_LINE('NUM='||NUM);
    DBMS_OUTPUT.PUT_LINE('PONE_NUM='||PONE_NUM);
    DBMS_OUTPUT.PUT_LINE('NAME='||NAME);
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE_ID='||EMPLOYEE_ID);
END;
/

-- PL/SQL 
-- 내용을 employee 에 해당된 모든직원 이름, 직업, 사원번호를 출력해주는 프로그램을 작성하시오.
DECLARE
    -- 배열타입정의(테이블타입정의)
    TYPE FIRST_NAME_ARRAY_TYPE IS TABLE OF EMPLOYEES.FIRST_NAME%TYPE INDEX BY BINARY_INTEGER; 
    TYPE JOB_ID_ARRAY_TYPE IS TABLE OF EMPLOYEES.JOB_ID%TYPE INDEX BY BINARY_INTEGER; 
    TYPE EMPLOYEE_ID_ARRAY_TYPE IS TABLE OF EMPLOYEES.EMPLOYEE_ID%TYPE INDEX BY BINARY_INTEGER; 
    -- 배열타입변수선언
    FIRST_NAME_ARRAY FIRST_NAME_ARRAY_TYPE; 
    JOB_ID_ARRAY JOB_ID_ARRAY_TYPE; 
    EMPLOYEE_ID_ARRAY EMPLOYEE_ID_ARRAY_TYPE;
    ROW_ARRAY EMPLOYEES%ROWTYPE;
    I BINARY_INTEGER := 0; 
    J BINARY_INTEGER; 
BEGIN
    -- 향샹된 포문을 통해서 RESULT SET값을 한개씩 가져와서 각 컬럼배열에 저장한다. 
    FOR ROW_ARRAY IN (SELECT * FROM EMPLOYEES) LOOP
        I := I + 1; 
        FIRST_NAME_ARRAY(I) := ROW_ARRAY.FIRST_NAME; 
        JOB_ID_ARRAY(I) := ROW_ARRAY.JOB_ID; 
        EMPLOYEE_ID_ARRAY(I) := ROW_ARRAY.EMPLOYEE_ID; 
    END LOOP; 
    -- 향상된 포문을 이용해서 컬럼 배열값에 저장된 값을 가져와서 출력하시오. 
    FOR J IN 1..I LOOP
        DBMS_OUTPUT.PUT_LINE(FIRST_NAME_ARRAY(J)  ||'  /  '||  JOB_ID_ARRAY(J) || '  /  '|| EMPLOYEE_ID_ARRAY(J)); 
    END LOOP; 

END; 
/

DECLARE
    TYPE FIRST_NAME_ARRAY_TYPE IS TABLE OF EMPLOYEES.FIRST_NAME%TYPE INDEX BY BINARY_INTEGER;
    TYPE JOB_ID_ARRAY_TYPE IS TABLE OF EMPLOYEES.JOB_ID%TYPE INDEX BY BINARY_INTEGER;
    TYPE EMPLOYEE_ID_ARRAY_TYPE IS TABLE OF EMPLOYEES.EMPLOYEE_ID%TYPE INDEX BY BINARY_INTEGER; 
    FIRST_NAME_ARRAY FIRST_NAME_ARRAY_TYPE;
    JOB_ID_ARRAY JOB_ID_ARRAY_TYPE;
    EMPLOYEE_ID_ARRAY EMPLOYEE_ID_ARRAY_TYPE;
    ROW_ARRAY EMPLOYEES%ROWTYPE;
    I BINARY_INTEGER := 0; 
    J BINARY_INTEGER;
BEGIN
    FOR ROW_ARRAY IN (SELECT*FROM EMPLOYEES)LOOP
    I := I+1;
    FIRST_NAME_ARRAY(I) := ROW_ARRAY.FIRST_NAME;
    JOB_ID_ARRAY(I) := ROW_ARRAY.JOB_ID;
    EMPLOYEE_ID_ARRAY(I) := ROW_ARRAY.EMPLOYEE_ID;
    END LOOP;
    FOR J IN 1..I LOOP
        DBMS_OUTPUT.PUT_LINE(FIRST_NAME_ARRAY(J)  ||'  /  '||  JOB_ID_ARRAY(J) || '  /  '|| EMPLOYEE_ID_ARRAY(J)); 
    END LOOP;
END;
/

DECLARE
    TYPE FIRST_NAME_ARRAY_TYPE IS TABLE OF EMPLOYEES.FIRST_NAME%TYPE INDEX BY BINARY_INTEGER;
    TYPE HIRE_DATE_ARRAY_TYPE IS TABLE OF EMPLOYEES.HIRE_DATE%TYPE INDEX BY BINARY_INTEGER;
    TYPE DEPARTMENT_ID_ARRAY_TYPE IS TABLE OF EMPLOYEES.DEPARTMENT_ID%TYPE INDEX BY BINARY_INTEGER;
    FIRST_NAME_ARRAY FIRST_NAME_ARRAY_TYPE;
    HIRE_DATE_ARRAY HIRE_DATE_ARRAY_TYPE;
    DEPARTMENT_ID_ARRAY DEPARTMENT_ID_ARRAY_TYPE;
    ROW_ARRAY EMPLOYEES%ROWTYPE;
    I BINARY_INTEGER :=0;
    J BINARY_INTEGER;
BEGIN
    FOR ROW_ARRAY IN (SELECT * FROM EMPLOYEES)LOOP
    I := I+1;
    FIRST_NAME_ARRAY(I) := ROW_ARRAY.FIRST_NAME;
    HIRE_DATE_ARRAY(I) := ROW_ARRAY.HIRE_DATE;
    DEPARTMENT_ID_ARRAY(I) := ROW_ARRAY.DEPARTMENT_ID;
    END LOOP;
    FOR J IN 1..I LOOP
        DBMS_OUTPUT.PUT_LINE(FIRST_NAME_ARRAY(J)  ||'  /  '||  HIRE_DATE_ARRAY(J) || '  /  '|| DEPARTMENT_ID_ARRAY(J));
    END LOOP;
END;
/




DECLARE
    TYPE FIRST_NAME_ARRAY_TYPE IS TABLE OF EMPLOYEES.FIRST_NAME%TYPE INDEX BY BINARY_INTEGER;
    TYPE JOB_ID_ARRAY_TYPE IS TABLE OF EMPLOYEES.JOB_ID%TYPE INDEX BY BINARY_INTEGER;
    TYPE EMPLOYEE_ID_ARRAY_TYPE IS TABLE OF EMPLOYEES.EMPLOYEE_ID%TYPE INDEX BY BINARY_INTEGER;
    FIRST_NAME_ARRAY FIRST_NAME_ARRAY_TYPE;
    JOB_ID_ARRAY JOB_ID_ARRAY_TYPE;
    EMPLOYEE_ID_ARRAY EMPLOYEE_ID_ARRAY_TYPE;
    ROW_ARRAY EMPLOYEES%ROWTYPE;
    I BINARY_INTEGER :=0;
    J BINARY_INTEGER;
BEGIN
    FOR ROW_ARRAY IN (SELECT*FROM EMPLOYEES) LOOP
        I := I+1;
        FIRST_NAME_ARRAY(I) := ROW_ARRAY.FIRST_NAME;
        JOB_ID_ARRAY(I) := ROW_ARRAY.JOB_ID;
        EMPLOYEE_ID_ARRAY(I) := ROW_ARRAY.EMPLOYEE_ID;
    END LOOP;
    FOR J IN 1..I LOOP
        DBMS_OUTPUT.PUT_LINE(FIRST_NAME_ARRAY(J) ||' / '|| JOB_ID_ARRAY(J) ||' / '|| EMPLOYEE_ID_ARRAY(J));
    END LOOP;
END;
/







