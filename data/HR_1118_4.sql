CREATE TABLE STU(
    SNO NUMBER(4), --학번
    SNAME VARCHAR2(20) NOT NULL,
    KOR NUMBER(4) NOT NULL,
    ENG NUMBER(4) NOT NULL,
    MAT NUMBER(4) NOT NULL,
    TOT NUMBER(4),
    AVE NUMBER(5,1),
    RANK NUMBER(4)
);
ALTER TABLE STU ADD CONSTRAINT STU_SNO_PK PRIMARY KEY(SNO);

--테이블에 학번, 이름, 국어, 영어, 수학 점수를 입력하면 총점과 평균이 계산되어 입력되도록 프로시저(IN_COUNT)를 작성하라. 
CREATE OR REPLACE PROCEDURE IN_COUNT (
    PSNO IN NUMBER,                  
    PNAME IN VARCHAR2,               
    PKOR IN NUMBER,                  
    PENG IN NUMBER,                  
    PMAT IN NUMBER                  
)
IS
    PTOT NUMBER;                 
    PAVE NUMBER(5,1);          
BEGIN
    PTOT := PKOR + PENG + PMAT;
    PAVE := PTOT / 3;

    INSERT INTO STU (SNO, SNAME, KOR, ENG, MAT, TOT, AVE)
    VALUES (PSNO, PNAME, PKOR, PENG, PMAT, PTOT, PAVE);
END;
/
EXECUTE IN_COUNT('1488','PARK',80,100,50);
SELECT * FROM STU;

--테이블에  학번,  이름,  국어,  영어,  수학  점수를  입력하면  총점과  평균이  자동  계산되도록  트리거(IN_COUNT_TRG)를 작성하라.
CREATE OR REPLACE TRIGGER IN_COUNT_TRG
BEFORE INSERT ON STU
FOR EACH 
ROW
BEGIN
    :NEW.TOT := :NEW.KOR + :NEW.ENG + :NEW.MAT;
    :NEW.AVE := :NEW.TOT / 3;
END;
/


--등수를 구하는 저장프로시저를 작성
CREATE OR REPLACE PROCEDURE IN_RANK
AS
BEGIN
    FOR rank_make IN (SELECT SNO,RANK() OVER (ORDER BY TOT DESC) AS RANK FROM STU)LOOP
        UPDATE STU SET STU.RANK = rank_make.RANK
        WHERE SNO = rank_make.SNO;
    END LOOP;
END;
/

drop table stu;
INSERT INTO STU(SNO,SNAME,KOR,ENG,MAT)
VALUES('1','홍길동',99,80,85);
INSERT INTO STU(SNO,SNAME,KOR,ENG,MAT)
VALUES('2','김희진',95,84,79);
INSERT INTO STU(SNO,SNAME,KOR,ENG,MAT)
VALUES('3','이현수',83,89,99);
INSERT INTO STU(SNO,SNAME,KOR,ENG,MAT)
VALUES('4','김철수',99,83,89);
INSERT INTO STU(SNO,SNAME,KOR,ENG,MAT)
VALUES('5','조현정',80,75,88);
EXECUTE IN_RANK;

SELECT * FROM STU order by rank;









CREATE OR REPLACE PROCEDURE CALCULATE_RANK
AS
BEGIN
    MERGE INTO STU t
    USING (SELECT SNO, RANK() OVER (ORDER BY TOT DESC) AS Rank FROM STU) r
    ON (t.SNO = r.SNO)WHEN MATCHED THEN
    UPDATE SET t.RANK = r.Rank;
END;
/

EXECUTE CALCULATE_RANK;
SELECT * FROM STU;