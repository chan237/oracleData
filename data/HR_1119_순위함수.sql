CREATE OR REPLACE PROCEDURE SCORE_RANK_PROC
IS 
    VSCORE_RT SCORE%ROWTYPE; 
    CURSOR C1 IS
    SELECT STUNUM, NAME, TOT,RANK() OVER(ORDER BY TOT DESC) RANK FROM SCORE ORDER BY TOT DESC; 
BEGIN
    FOR  VSCORE_RT IN C1 LOOP
        UPDATE SCORE SET RANK = VSCORE_RT.RANK WHERE STUNUM =  VSCORE_RT.STUNUM; 
    END LOOP;
    COMMIT; 
END;
/

CREATE OR REPLACE PROCEDURE SCORE_RANK_PROC
IS 

BEGIN
UPDATE SCORE S SET RANK=(SELECT S_RANK FROM(SELECT STUNUM,RANK()OVER(ORDER BY AVE DESC) AS S_RANK FROM SCORE) WHERE S.STUNUM=STUNUM);
END;
/
EXECUTE SCORE_RANK_PROC;
SELECT * FROM SCORE ORDER BY RANK ASC, KOR DESC, ENG DESC, MAT DESC;

CREATE OR REPLACE TRIGGER SCORE_TRIGGER01
    BEFORE INSERT ON SCORE
    FOR EACH ROW
BEGIN
    :NEW.TOTAL := :NEW.KOR + :NEW.ENG + :NEW.MAT;
    :NEW.AVG := ROUND((:NEW.KOR + :NEW.ENG + :NEW.MAT) / 3, 1);
END;

/
INSERT INTO SCORE(NO,NAME,KOR,ENG,MAT) VALUES((SELECT NVL(MAX(NO),0)+1 FROM SCORE),DBMS_RANDOM.STRING('U',5),
ROUND(DBMS_RANDOM.VALUE(50,100)),ROUND(DBMS_RANDOM.VALUE(50,100)),ROUND(DBMS_RANDOM.VALUE(50,100)));

SELECT * FROM SCORE;