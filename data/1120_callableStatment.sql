--자바에서 CallalbleStatment test
drop table emp1;
CREATE TABLE EMP1
AS SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_ID, SALARY FROM EMPLOYEES;

SELECT * FROM EMP1 ORDER BY DEPARTMENT_ID;

--부서별로 10이면 10% 인상, 20이면 20% 인상 나머지는 동결
CREATE OR REPLACE PROCEDURE EMP1_PROCE(
    VDEPARTMENT_NO IN EMP1.DEPARTMENT_ID%TYPE, VINCREMENT_SALARY number)
IS
BEGIN
    UPDATE EMP1 
    SET SALARY = SALARY*VINCREMENT_SALARY
    WHERE DEPARTMENT_ID = VDEPARTMENT_NO;
    COMMIT;
END;
/

EXECUTE EMP1_PROCE(10,10);

--책값 인상
CREATE OR REPLACE PROCEDURE BOOKS_PROCE(
    VID IN BOOKS.ID%TYPE, VPRICE IN BOOKS.PRICE%TYPE, VMESSAGE OUT VARCHAR2)
IS
    VBOOKS_RT BOOKS%ROWTYPE;
BEGIN
    UPDATE BOOKS
    SET PRICE = PRICE + VPRICE
    WHERE ID = VID;
    COMMIT;
    SELECT * INTO VBOOKS_RT FROM BOOKS WHERE ID = VID;
    VMESSAGE := VBOOKS_RT.ID || ' 번호의 인상금액은 ' || VPRICE || ' 이고 총 금액은 ' || VBOOKS_RT.PRICE || '입니다.';
    DBMS_OUTPUT.PUT_LINE(VMESSAGE);
END;
/

SELECT * FROM BOOKS;
VARIABLE MESSAGE VARCHAR2(200);

EXECUTE BOOKS_PROCE(1,10000,:MESSAGE);


--책값 인상
CREATE OR REPLACE FUNCTION BOOKS_FUNC(VID IN BOOKS.ID%TYPE) RETURN VARCHAR2
IS
    VBOOKS_RT BOOKS%ROWTYPE;
    VMESSAGE VARCHAR2(100);
BEGIN
    SELECT * INTO VBOOKS_RT FROM BOOKS WHERE ID = VID;
    VMESSAGE := VBOOKS_RT.ID || ' 번호의 총 금액은 ' || VBOOKS_RT.PRICE || '입니다.';
    RETURN VMESSAGE;
END;
/

SELECT BOOKS_FUNC(2) FROM DUAL;

--합, 평균 구하는 트리거 생성
CREATE OR REPLACE TRIGGER STU_TRIGGER
BEFORE INSERT ON STU01
FOR EACH ROW
BEGIN
    :NEW.SUM := :NEW.KOR + :NEW.ENG + :NEW.MATH;
    :NEW.AVG := ROUND((:NEW.KOR + :NEW.ENG + :NEW.MATH) / 3, 1);
END;
/
--update 시 합, 평균이 같이 변하는 트리거 생성
CREATE OR REPLACE TRIGGER STU_TRIGGER2
BEFORE UPDATE ON STU01
FOR EACH ROW
BEGIN
    :NEW.SUM := :NEW.KOR + :NEW.ENG + :NEW.MATH;
    :NEW.AVG := ROUND((:NEW.KOR + :NEW.ENG + :NEW.MATH) / 3, 1);
END;
/