DROP TABLE STUD;

//테이블
CREATE TABLE STUD ( 
    ID number(4), 
    NAME varchar2(50), 
    ADDR varchar2(50), 
    YEAR varchar2(10)
); 
ALTER TABLE STUD ADD CONSTRAINT STUD_ID_PK PRIMARY KEY(ID);

//시퀸스(ID)
CREATE SEQUENCE STUD_ID_SEQ 
START WITH 1 
INCREMENT BY 1 ;

//기본값
INSERT INTO STUD VALUES(STUD_ID_SEQ.NEXTVAL, '홍길동', '서울', '1888');
INSERT INTO STUD VALUES(STUD_ID_SEQ.NEXTVAL, '임꺽정', '경남', '1786');
INSERT INTO STUD VALUES(STUD_ID_SEQ.NEXTVAL, '우투리', '전북', '1528');
INSERT INTO STUD VALUES(STUD_ID_SEQ.NEXTVAL, '불가살', '함경', '1325');
commit; 

SELECT * FROM STUD;

//삽입 확인
UPDATE STUD SET NAME = '김팔도', ADDR = '전국', YEAR = '1999' WHERE ID=4;

//수정하기 - 프로시저
CREATE OR REPLACE PROCEDURE STUD_UPDATE(
    VID IN STUD.ID%TYPE,
    VNAME IN STUD.NAME%TYPE,
    VADDR IN STUD.ADDR%TYPE,
    VYEAR IN STUD.YEAR%TYPE)
IS
    VSTUD_RETURN STUD%ROWTYPE;
BEGIN
    UPDATE STUD 
    SET NAME = VNAME, ADDR = VADDR,YEAR = VYEAR WHERE ID = VID;
    COMMIT;
END;
/

//수정 확인
EXECUTE STUD_UPDATE(1,'홍길동','서울','1234');

//YEAR증감 프로시저
CREATE OR REPLACE PROCEDURE STUD_PROCEDURE(
    VSTUD_ID IN STUD.ID%TYPE, VYEAR IN STUD.YEAR%TYPE, VMESSAGE OUT VARCHAR2)
IS
    VSTUD_RETURN STUD%ROWTYPE;
BEGIN
    UPDATE STUD 
    SET YEAR = YEAR + VYEAR WHERE ID = VSTUD_ID;
    COMMIT;
    SELECT * INTO VSTUD_RETURN FROM STUD WHERE ID = VSTUD_ID;
    VMESSAGE := VSTUD_ID || ' 번호의 증가 YEAR는 ' || VYEAR || ' 이고, 총 ' || VSTUD_RETURN.YEAR || '입니다.';
    DBMS_OUTPUT.PUT_LINE(VMESSAGE);
END;
/

VARIABLE MESSAGE VARCHAR2(200);
EXECUTE STUD_PROCEDURE(1,20,:MESSAGE);
SELECT * FROM STUD;

//조회하기 FUNCTION
CREATE OR REPLACE FUNCTION STUS_FUNCTION(VID IN STUD.ID%TYPE) RETURN VARCHAR2
IS
    VSTUD_RT STUD%ROWTYPE;
    VMESSAGE VARCHAR2(100);
BEGIN
    SELECT * INTO VSTUD_RT FROM STUD WHERE ID = VID;
    VMESSAGE := VSTUD_RT.ID || ' 번호의 출생년도는 ' || VSTUD_RT.YEAR || '입니다.';
    RETURN VMESSAGE;
END;
/

SELECT STUS_FUNCTION(1) FROM DUAL;

//넣을만 한 트리거가 없다
CREATE OR REPLACE TRIGGER STUD_TRIGGER
BEFORE UPDATE ON STUD
FOR EACH ROW
BEGIN
    
END;
/

